name: Build Armbian

on:
  workflow_dispatch:  # 允许手动触发
    inputs:
      board:
        description: '开发板型号 (如: orangepizero, rock64)'
        required: true
        default: 'hinlink-h68k'
      branch:
        description: 'Armbian 分支 (如: current, legacy)'
        required: true
        default: 'current'
      release:
        description: '发行版 (如: jammy, bullseye)'
        required: true
        default: 'trixie'
  push:
    branches: [ main ]
    paths: 
      - 'config/**'  # 当配置文件变更时触发

env:
  BUILD_ARGS: ""

jobs:
  build:
    runs-on: ubuntu-22.04  # 使用 Ubuntu 22.04 作为构建环境
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 安装依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          build-essential \
          flex \
          bison \
          libssl-dev \
          libncurses5-dev \
          rsync \
          python3 \
          device-tree-compiler \
          u-boot-tools \
          parted \
          debootstrap \
          dosfstools \
          qemu-user-static \
          bc
    
    - name: 克隆 Armbian 构建系统
      run: |
        git clone --depth 1 https://github.com/armbian/build.git armbian-build
        cd armbian-build
        
    - name: 准备配置文件 (如果存在)
      run: |
        if [ -d "../config" ]; then
          cp -r ../config/* armbian-build/config/
        fi
        
    - name: 编译 Armbian
      run: |
        cd armbian-build
        # 设置构建参数
        echo "BOARD=${{ github.event.inputs.board || 'orangepizero' }}" >> $GITHUB_ENV
        echo "BRANCH=${{ github.event.inputs.branch || 'current' }}" >> $GITHUB_ENV
        echo "RELEASE=${{ github.event.inputs.release || 'bullseye' }}" >> $GITHUB_ENV
        
        # 开始编译
        ./compile.sh \
          BOARD=${{ env.BOARD }} \
          BRANCH=${{ env.BRANCH }} \
          RELEASE=${{ env.RELEASE }} \
          BUILD_MINIMAL=no \
          BUILD_DESKTOP=no \
          KERNEL_ONLY=no \
          KERNEL_CONFIGURE=no \
          ${{ env.BUILD_ARGS }}
          
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: armbian-images
        path: armbian-build/output/images/
        
    - name: 清理缓存 (可选)
      if: always()
      run: |
        sudo rm -rf armbian-build/cache
        sudo rm -rf armbian-build/output/debs
